{"version":3,"sources":["reportWebVitals.js","routes/PrivateRoute.js","shared/httpClient.js","routes/index.js","configureStore.js","actions/user.js","components/Users/Login.js","components/Users/Signup.js","components/Movies/Card.js","components/Movies/List.js","components/Movies/Details.js","components/Users/Favorites.js","components/PageNotFound/index.js","components/Navbar/index.js","reducers/user.js","reducers/rootReducer.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","connect","state","user","children","rest","userName","name","render","location","to","pathname","from","myAxios","axios","create","withCredentials","defaults","transformResponse","push","data","camelcaseKeys","deep","BASE_BACKEND_URL","url","template","params","myParams","undefined","format","urlTemplate","parse","expand","store","routes","users","login","favoriteMovies","index","movies","search","POPULATE_USER","REMOVE_USER","dispatch","populateUser","type","useState","email","setEmail","password","setPassword","errorMessage","setErrorMessage","history","useHistory","handleSubmit","event","a","preventDefault","formData","FormData","append","httpClient","post","response","detail","className","role","onSubmit","placeholder","onChange","target","value","Signup","setName","setPasword","title","poster","year","favorite","imdbId","fetchMoviesWithCurrentState","addToFavorite","item_id","headers","Authorization","accessToken","style","objectFit","src","alt","cursor","onClick","DEFAULT_QUERY_TITLE","movieList","setMovieList","queryTitle","setQueryTitle","queryYear","setQueryYear","isLoading","setIsLoading","useEffect","abortController","AbortController","fetchMovies","abort","get","s","y","error","fetchMoviesByTitleWithDebounce","useRef","debounce","current","fetchMoviesByYearWithDebounce","aria-label","handleTitleChange","handleYearChange","length","map","movie","id","useParams","movieDetails","setMovieDetails","i","fetchMovieDetails","plot","runtime","released","genre","language","country","director","imdbRating","imdbVotes","ratings","rating","source","actors","awards","PageNotFound","removeUser","action","rootReducer","combineReducers","persistConfig","key","storage","persistedReducer","persistReducer","createStore","applyMiddleware","thunk","persistor","persistStore","App","basename","process","exact","path","AppWithProvider","loading","StrictMode","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.fec057c2.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect, Route } from 'react-router-dom';\n\nconst PrivateRoute = ({ children, user, ...rest }) => {\n  const userName = user?.name;\n\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        userName ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: '/login',\n              state: { from: location },\n            }}\n          />\n        )\n      }\n    />\n  );\n};\n\nconst mapStateToProps = state => ({\n  user: state.user,\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import axios from 'axios';\nimport camelcaseKeys from 'camelcase-keys';\n\nconst myAxios = axios.create({\n  withCredentials: false,\n});\n\nmyAxios.defaults.transformResponse.push(data => {\n  if (typeof data !== 'object' || data === null) {\n    return data;\n  }\n  return camelcaseKeys(data, { deep: true });\n});\n\nexport default myAxios;\n","import urlTemplate from 'url-template';\nconst BASE_BACKEND_URL =\n  process.env.NODE_ENV === 'development'\n    ? 'http://localhost:8000'\n    : 'https://omdb-in-react.herokuapp.com';\n\nfunction url(template, params) {\n  const myParams = { ...params };\n  if (myParams.format === undefined) {\n    myParams.format = 'json';\n  }\n  return urlTemplate.parse(template).expand(myParams);\n}\n\nconst routes = {\n  users: {\n    create: params => url(`${BASE_BACKEND_URL}/users`, params),\n    login: params => url(`${BASE_BACKEND_URL}/token`, params),\n    favoriteMovies: {\n      index: params => url(`${BASE_BACKEND_URL}/user/favorite_movies`, params),\n      create: params => url(`${BASE_BACKEND_URL}/user/favorite_movies`, params),\n    },\n  },\n\n  movies: {\n    index: params => url(`${BASE_BACKEND_URL}/movies/all{?s,y}`, params),\n    search: params => url(`${BASE_BACKEND_URL}/movies/search{?i}`, params),\n  },\n};\n\nexport default routes;\n","import { createStore, applyMiddleware } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducer';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nlet store;\nif (process.env.NODE_ENV === 'development') {\n  store = createStore(persistedReducer, composeWithDevTools(applyMiddleware(thunk, logger)));\n} else {\n  store = createStore(persistedReducer, applyMiddleware(thunk));\n}\nconst persistor = persistStore(store);\n\nexport { persistor, store };\n","export const POPULATE_USER = 'POPULATE_USER';\nexport const REMOVE_USER = 'REMOVE_USER';\n\nexport const populateUser = data => {\n  return dispatch => {\n    dispatch({ type: POPULATE_USER, data });\n  };\n};\n\nexport const removeUser = () => {\n  return dispatch => {\n    dispatch({ type: REMOVE_USER });\n  };\n};\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport httpClient from '../../shared/httpClient';\nimport routes from '../../routes/index';\nimport { populateUser } from '../../actions/user';\n\nconst Login = ({ populateUser }) => {\n  const [email, setEmail] = useState(null);\n  const [password, setPassword] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const history = useHistory();\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append('username', email);\n    formData.append('password', password);\n\n    try {\n      const response = await httpClient.post(routes.users.login(), formData);\n      populateUser(response.data);\n      history.push('/');\n    } catch (error) {\n      setErrorMessage(error.response.data.detail);\n    }\n  };\n\n  return (\n    <div className=\"row\">\n      <div className=\"w-50 mx-auto\">\n        <div className=\"alert alert-secondary\" role=\"alert\">\n          Please Login.\n          <br />\n          You can use the following credentials to login as well: <br />\n          email: 'test@example.com', password: '12345'\n        </div>\n        {errorMessage && (\n          <div className=\"alert alert-danger\" role=\"alert\">\n            {errorMessage}\n          </div>\n        )}\n        <div className=\"form-group text-left\">\n          <h2>Login</h2>\n        </div>\n        <form onSubmit={event => handleSubmit(event)}>\n          <div className=\"form-group\">\n            <label>Email address</label>\n            <input\n              type=\"email\"\n              className=\"form-control\"\n              placeholder=\"Enter email\"\n              onChange={event => setEmail(event.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Password</label>\n            <input\n              type=\"password\"\n              className=\"form-control\"\n              placeholder=\"Password\"\n              onChange={event => setPassword(event.target.value)}\n            />\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Submit\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  populateUser: data => dispatch(populateUser(data)),\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport httpClient from '../../shared/httpClient';\nimport routes from '../../routes/index';\n\nconst Signup = () => {\n  const [name, setName] = useState(null);\n  const [email, setEmail] = useState(null);\n  const [password, setPasword] = useState(null);\n  const history = useHistory();\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      await httpClient.post(routes.users.create(), { name, email, password });\n      history.push('/login');\n    } catch (error) {}\n  };\n\n  return (\n    <div className=\"row\">\n      <div className=\"w-50 mx-auto\">\n        <div className=\"form-group text-left\">\n          <h2>Sign Up</h2>\n        </div>\n        <form onSubmit={event => handleSubmit(event)}>\n          <div className=\"form-group\">\n            <label>Name</label>\n            <input\n              type=\"name\"\n              className=\"form-control\"\n              placeholder=\"Enter name\"\n              onChange={event => setName(event.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Email address</label>\n            <input\n              type=\"email\"\n              className=\"form-control\"\n              placeholder=\"Enter email\"\n              onChange={event => setEmail(event.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Password</label>\n            <input\n              type=\"password\"\n              className=\"form-control\"\n              placeholder=\"Password\"\n              onChange={event => setPasword(event.target.value)}\n            />\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Submit\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Signup;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport httpClient from '../../shared/httpClient';\nimport routes from '../../routes/index';\n\nconst MovieCard = ({\n  title,\n  poster,\n  year,\n  favorite,\n  imdbId,\n  fetchMoviesWithCurrentState,\n  user,\n}) => {\n  const addToFavorite = async () => {\n    try {\n      await httpClient.post(\n        routes.users.favoriteMovies.create(),\n        { item_id: imdbId },\n        {\n          headers: {\n            Authorization: `Bearer ${user.accessToken}`,\n          },\n        },\n      );\n      fetchMoviesWithCurrentState();\n    } catch (error) {}\n  };\n  return (\n    <div className=\"card\">\n      <Link to={`movies/${imdbId}`}>\n        <img\n          className=\"card-img-top\"\n          style={{ objectFit: 'cover' }}\n          src={poster === 'N/A' ? 'https://placehold.it/198x264&text=Image+Not+Found' : poster}\n          alt=\"\"\n        />\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{title}</h5>\n          <p className=\"card-text\">\n            <small className=\"text-muted\">{year}</small>\n          </p>\n        </div>\n      </Link>\n\n      {favorite && (\n        <button\n          type=\"button\"\n          className=\"btn btn-light btn-sm flex-grow-1\"\n          style={{ cursor: 'default' }}\n        >\n          Your Favorite\n        </button>\n      )}\n\n      {!favorite && (\n        <button\n          type=\"button\"\n          className=\"btn btn-light btn-sm flex-grow-1\"\n          onClick={() => addToFavorite()}\n        >\n          Add to Favorite\n        </button>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  user: state.user,\n});\n\nexport default connect(mapStateToProps)(MovieCard);\n","import React, { useState, useEffect, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { debounce } from 'throttle-debounce';\n\nimport MovieCard from './Card';\n\nimport httpClient from '../../shared/httpClient';\nimport routes from '../../routes/index';\n\nconst DEFAULT_QUERY_TITLE = 'satyajit';\n\nconst MovieList = ({ user }) => {\n  const [movieList, setMovieList] = useState([]);\n  const [queryTitle, setQueryTitle] = useState(DEFAULT_QUERY_TITLE);\n  const [queryYear, setQueryYear] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    fetchMovies({ title: DEFAULT_QUERY_TITLE, year: '' });\n    return () => abortController.abort();\n  }, []);\n\n  const fetchMovies = async ({ title, year }) => {\n    setIsLoading(true);\n    setErrorMessage(null);\n\n    try {\n      const response = await httpClient.get(routes.movies.index({ s: title, y: year }), {\n        headers: {\n          Authorization: `Bearer ${user.accessToken}`,\n        },\n      });\n\n      if (response.data.response === 'False') {\n        setErrorMessage(response.data.error);\n      } else {\n        setMovieList(response.data.search);\n      }\n    } catch (error) {\n      setErrorMessage(error.response.data.detail);\n    }\n    setIsLoading(false);\n  };\n\n  const fetchMoviesWithCurrentState = () => fetchMovies({ title: queryTitle, year: queryYear });\n\n  const fetchMoviesByTitleWithDebounce = useRef(\n    debounce(1000, ({ title, year }) => {\n      fetchMovies({ title, year });\n    }),\n  ).current;\n\n  const handleTitleChange = event => {\n    let title = event.target.value;\n    if (title === '') {\n      title = DEFAULT_QUERY_TITLE; // OMDB API requires the title to be non empty\n    }\n    setQueryTitle(title);\n    fetchMoviesByTitleWithDebounce({ title, year: queryYear });\n  };\n\n  const fetchMoviesByYearWithDebounce = useRef(\n    debounce(1000, ({ title, year }) => {\n      fetchMovies({ title, year });\n    }),\n  ).current;\n\n  const handleYearChange = event => {\n    setQueryYear(event.target.value);\n    fetchMoviesByYearWithDebounce({ title: queryTitle, year: event.target.value });\n  };\n\n  return (\n    <div className=\"movie-list\">\n      {isLoading && <div className=\"lds-dual-ring\" />}\n\n      {errorMessage && (\n        <div className=\"alert alert-danger\" role=\"alert\">\n          {errorMessage}\n        </div>\n      )}\n\n      <div className=\"movie-list__search input-group mt-4\">\n        <input\n          type=\"text\"\n          className=\"form-control mr-2\"\n          placeholder=\"Search by Title\"\n          aria-label=\"Search by Title\"\n          onChange={event => handleTitleChange(event)}\n        />\n\n        <input\n          type=\"text\"\n          className=\"form-control ml-2\"\n          placeholder=\"Search by Year\"\n          aria-label=\"Search by Year\"\n          onChange={event => handleYearChange(event)}\n        />\n      </div>\n\n      <div className=\"movie-list__cards\">\n        {!isLoading && movieList.length === 0 && <p>No results found!</p>}\n        {!isLoading &&\n          movieList.length > 0 &&\n          movieList.map(movie => (\n            <MovieCard\n              key={movie.imdbId}\n              title={movie.title}\n              poster={movie.poster}\n              year={movie.year}\n              favorite={movie.favorite}\n              imdbId={movie.imdbId}\n              fetchMoviesWithCurrentState={() => fetchMoviesWithCurrentState()}\n            />\n          ))}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  user: state.user,\n});\n\nexport default connect(mapStateToProps)(MovieList);\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nimport httpClient from '../../shared/httpClient';\nimport routes from '../../routes/index';\n\nconst MovieDetails = ({ user }) => {\n  const { id } = useParams();\n  const [isLoading, setIsLoading] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [movieDetails, setMovieDetails] = useState(null);\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    const fetchMovieDetails = async () => {\n      try {\n        const response = await httpClient.get(routes.movies.search({ i: id }), {\n          headers: {\n            Authorization: `Bearer ${user.accessToken}`,\n          },\n        });\n        setMovieDetails(response.data);\n      } catch (error) {\n        setErrorMessage(error.response.data.detail);\n      }\n    };\n    fetchMovieDetails();\n    setIsLoading(false);\n\n    return () => abortController.abort();\n  }, [id]);\n\n  return (\n    <div className=\"movie-details mt-4 mb-4\">\n      {isLoading && <div className=\"lds-dual-ring\" />}\n      {errorMessage && (\n        <div className=\"alert alert-danger\" role=\"alert\">\n          {errorMessage}\n        </div>\n      )}\n      {!isLoading && (\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <img\n              className=\"card-img-top h-50\"\n              style={{ objectFit: 'cover' }}\n              src={\n                movieDetails?.poster === 'N/A'\n                  ? 'https://placehold.it/198x264&text=Image+Not+Found'\n                  : movieDetails?.poster\n              }\n              alt=\"\"\n            />\n          </div>\n          <div className=\"col-md-8\">\n            <h5 className=\"card-title\">{movieDetails?.title}</h5>\n            <p className=\"card-text\">\n              <b>Plot: </b>\n              {movieDetails?.plot}\n            </p>\n            <ul className=\"list-group list-group-flush\">\n              <li className=\"list-group-item\">Type: {movieDetails?.type}</li>\n              <li className=\"list-group-item\">Year: {movieDetails?.year}</li>\n              <li className=\"list-group-item\">Runtime: {movieDetails?.runtime}</li>\n              <li className=\"list-group-item\">Released: {movieDetails?.released}</li>\n              <li className=\"list-group-item\">Genre: {movieDetails?.genre}</li>\n              <li className=\"list-group-item\">Language: {movieDetails?.language}</li>\n              <li className=\"list-group-item\">Country: {movieDetails?.country}</li>\n              <li className=\"list-group-item\">Director: {movieDetails?.director}</li>\n              <li className=\"list-group-item\">IMDB Rating: {movieDetails?.imdbRating}</li>\n              <li className=\"list-group-item\">IMDB Votes: {movieDetails?.imdbVotes}</li>\n              {movieDetails?.ratings.map(rating => (\n                <li className=\"list-group-item\" key={rating?.source}>\n                  {rating?.source} Rating: {rating?.value}\n                </li>\n              ))}\n              <li className=\"list-group-item\">Language: {movieDetails?.language}</li>\n              <li className=\"list-group-item\">Actors: {movieDetails?.actors}</li>\n              <li className=\"list-group-item\">Awards: {movieDetails?.awards}</li>\n            </ul>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  user: state.user,\n});\n\nexport default connect(mapStateToProps)(MovieDetails);\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport MovieCard from '../Movies/Card';\n\nimport httpClient from '../../shared/httpClient';\nimport routes from '../../routes/index';\n\nconst FavoriteList = ({ user }) => {\n  const [movieList, setMovieList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    fetchMovies();\n    return () => abortController.abort();\n  }, []);\n\n  const fetchMovies = async () => {\n    setIsLoading(true);\n    setErrorMessage(null);\n\n    try {\n      const response = await httpClient.get(routes.users.favoriteMovies.index(), {\n        headers: {\n          Authorization: `Bearer ${user.accessToken}`,\n        },\n      });\n\n      if (response.data.response === 'False') {\n        setErrorMessage(response.data.error);\n      } else {\n        setMovieList(response.data.search);\n      }\n    } catch (error) {\n      setErrorMessage(error.response.data.detail);\n    }\n    setIsLoading(false);\n  };\n\n  return (\n    <div className=\"movie-list\">\n      {isLoading && <div className=\"lds-dual-ring\" />}\n\n      {errorMessage && (\n        <div className=\"alert alert-danger\" role=\"alert\">\n          {errorMessage}\n        </div>\n      )}\n\n      {!isLoading && movieList.length === 0 && (\n        <p>You haven't added anything to your favorite list yet</p>\n      )}\n\n      <div className=\"movie-list__cards\">\n        {!isLoading &&\n          movieList.length > 0 &&\n          movieList.map(movie => (\n            <MovieCard\n              key={movie.imdbId}\n              title={movie.title}\n              poster={movie.poster}\n              year={movie.year}\n              favorite={movie.favorite}\n              imdbId={movie.imdbId}\n            />\n          ))}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  user: state.user,\n});\n\nexport default connect(mapStateToProps)(FavoriteList);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst PageNotFound = () => {\n  return (\n    <>\n      <p>404 | Page not found</p>\n      <p>\n        <Link to=\"/\">Back to Home</Link>\n      </p>\n    </>\n  );\n};\n\nexport default PageNotFound;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { removeUser } from '../../actions/user';\n\nconst Navbar = ({ user, removeUser }) => (\n  <nav className=\"navbar navbar-light bg-light\">\n    <Link className=\"navbar-brand\" to=\"/\">\n      OMDB App\n    </Link>\n    {user?.name ? (\n      <ul className=\"nav justify-content-end\">\n        <li className=\"align-self-center mr-3\">{user.name}</li>\n        <li>\n          <Link to=\"/favorites\">\n            <button type=\"button\" className=\"btn btn-primary mr-3\">\n              Favorites\n            </button>\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/login\">\n            <button type=\"button\" className=\"btn btn-warning\" onClick={() => removeUser()}>\n              Sign Out\n            </button>\n          </Link>\n        </li>\n      </ul>\n    ) : (\n      <ul className=\"nav justify-content-end\">\n        <Link to=\"/login\">\n          <button type=\"button\" className=\"btn btn-primary mr-3\">\n            Log In\n          </button>\n        </Link>\n        <Link to=\"/signup\">\n          <button type=\"button\" className=\"btn btn-primary\">\n            Sign Up\n          </button>\n        </Link>\n      </ul>\n    )}\n  </nav>\n);\n\nconst mapStateToProps = state => ({\n  user: state.user,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  removeUser: () => dispatch(removeUser()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);\n","import { POPULATE_USER, REMOVE_USER } from '../actions/user';\n\nconst user = (state = null, action) => {\n  switch (action.type) {\n    case POPULATE_USER:\n      return { ...state, ...action.data };\n    case REMOVE_USER:\n      return null;\n    default:\n      return state;\n  }\n};\n\nexport default user;\n","import { combineReducers } from 'redux';\nimport user from './user';\n\nconst rootReducer = combineReducers({\n  user,\n});\n\nexport default rootReducer;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport PrivateRoute from './routes/PrivateRoute';\n\nimport Login from './components/Users/Login';\nimport Signup from './components/Users/Signup';\nimport MovieList from './components/Movies/List';\nimport MovieDetails from './components/Movies/Details';\nimport FavoriteList from './components/Users/Favorites';\nimport PageNotFound from './components/PageNotFound/index';\n\nimport Navbar from './components/Navbar';\n\nimport { persistor, store } from './configureStore';\n\nimport './stylesheets/index.scss';\n\nconst App = () => (\n  <div className=\"omdb-app\">\n    <Router basename={process.env.PUBLIC_URL}>\n      <Navbar />\n      <div className=\"container-fluid\">\n        <Switch>\n          <Route exact path=\"/login\">\n            <Login />\n          </Route>\n          <Route exact path=\"/signup\">\n            <Signup />\n          </Route>\n          <PrivateRoute exact path=\"/(|movies)\">\n            <MovieList />\n          </PrivateRoute>\n          <PrivateRoute exact path=\"/movies/:id\">\n            <MovieDetails />\n          </PrivateRoute>\n          <PrivateRoute exact path=\"/favorites\">\n            <FavoriteList />\n          </PrivateRoute>\n          <Route exact path=\"*\">\n            <PageNotFound />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  </div>\n);\n\nconst AppWithProvider = () => (\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </PersistGate>\n  </Provider>\n);\n\nexport default AppWithProvider;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\n\nimport App from './App';\nimport './stylesheets/index.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}